$date
	Wed Jan 10 20:53:00 2024
$end
$version
	Questa Intel Starter FPGA Edition Version 2021.2
$end
$timescale
	1ps
$end

$scope module tb_Test $end
$var reg 1 ! clk $end
$var reg 1 " rst_n $end
$var reg 1 # jump $end
$var reg 1 $ jump_accept $end
$var reg 32 % jump_addr [31:0] $end
$var reg 1 & stop_fetch $end
$var reg 128 ' fetch_instr_pc [127:0] $end
$var reg 1 ( write_fifo $end

$scope module Test_instance $end
$var wire 1 ) clk $end
$var wire 1 * rst_n $end
$var wire 1 + jump $end
$var wire 1 , jump_accept $end
$var wire 1 - jump_addr [31] $end
$var wire 1 . jump_addr [30] $end
$var wire 1 / jump_addr [29] $end
$var wire 1 0 jump_addr [28] $end
$var wire 1 1 jump_addr [27] $end
$var wire 1 2 jump_addr [26] $end
$var wire 1 3 jump_addr [25] $end
$var wire 1 4 jump_addr [24] $end
$var wire 1 5 jump_addr [23] $end
$var wire 1 6 jump_addr [22] $end
$var wire 1 7 jump_addr [21] $end
$var wire 1 8 jump_addr [20] $end
$var wire 1 9 jump_addr [19] $end
$var wire 1 : jump_addr [18] $end
$var wire 1 ; jump_addr [17] $end
$var wire 1 < jump_addr [16] $end
$var wire 1 = jump_addr [15] $end
$var wire 1 > jump_addr [14] $end
$var wire 1 ? jump_addr [13] $end
$var wire 1 @ jump_addr [12] $end
$var wire 1 A jump_addr [11] $end
$var wire 1 B jump_addr [10] $end
$var wire 1 C jump_addr [9] $end
$var wire 1 D jump_addr [8] $end
$var wire 1 E jump_addr [7] $end
$var wire 1 F jump_addr [6] $end
$var wire 1 G jump_addr [5] $end
$var wire 1 H jump_addr [4] $end
$var wire 1 I jump_addr [3] $end
$var wire 1 J jump_addr [2] $end
$var wire 1 K jump_addr [1] $end
$var wire 1 L jump_addr [0] $end
$var wire 1 M stop_fetch $end
$var wire 1 N fetch_instr_pc [127] $end
$var wire 1 O fetch_instr_pc [126] $end
$var wire 1 P fetch_instr_pc [125] $end
$var wire 1 Q fetch_instr_pc [124] $end
$var wire 1 R fetch_instr_pc [123] $end
$var wire 1 S fetch_instr_pc [122] $end
$var wire 1 T fetch_instr_pc [121] $end
$var wire 1 U fetch_instr_pc [120] $end
$var wire 1 V fetch_instr_pc [119] $end
$var wire 1 W fetch_instr_pc [118] $end
$var wire 1 X fetch_instr_pc [117] $end
$var wire 1 Y fetch_instr_pc [116] $end
$var wire 1 Z fetch_instr_pc [115] $end
$var wire 1 [ fetch_instr_pc [114] $end
$var wire 1 \ fetch_instr_pc [113] $end
$var wire 1 ] fetch_instr_pc [112] $end
$var wire 1 ^ fetch_instr_pc [111] $end
$var wire 1 _ fetch_instr_pc [110] $end
$var wire 1 ` fetch_instr_pc [109] $end
$var wire 1 a fetch_instr_pc [108] $end
$var wire 1 b fetch_instr_pc [107] $end
$var wire 1 c fetch_instr_pc [106] $end
$var wire 1 d fetch_instr_pc [105] $end
$var wire 1 e fetch_instr_pc [104] $end
$var wire 1 f fetch_instr_pc [103] $end
$var wire 1 g fetch_instr_pc [102] $end
$var wire 1 h fetch_instr_pc [101] $end
$var wire 1 i fetch_instr_pc [100] $end
$var wire 1 j fetch_instr_pc [99] $end
$var wire 1 k fetch_instr_pc [98] $end
$var wire 1 l fetch_instr_pc [97] $end
$var wire 1 m fetch_instr_pc [96] $end
$var wire 1 n fetch_instr_pc [95] $end
$var wire 1 o fetch_instr_pc [94] $end
$var wire 1 p fetch_instr_pc [93] $end
$var wire 1 q fetch_instr_pc [92] $end
$var wire 1 r fetch_instr_pc [91] $end
$var wire 1 s fetch_instr_pc [90] $end
$var wire 1 t fetch_instr_pc [89] $end
$var wire 1 u fetch_instr_pc [88] $end
$var wire 1 v fetch_instr_pc [87] $end
$var wire 1 w fetch_instr_pc [86] $end
$var wire 1 x fetch_instr_pc [85] $end
$var wire 1 y fetch_instr_pc [84] $end
$var wire 1 z fetch_instr_pc [83] $end
$var wire 1 { fetch_instr_pc [82] $end
$var wire 1 | fetch_instr_pc [81] $end
$var wire 1 } fetch_instr_pc [80] $end
$var wire 1 ~ fetch_instr_pc [79] $end
$var wire 1 !! fetch_instr_pc [78] $end
$var wire 1 "! fetch_instr_pc [77] $end
$var wire 1 #! fetch_instr_pc [76] $end
$var wire 1 $! fetch_instr_pc [75] $end
$var wire 1 %! fetch_instr_pc [74] $end
$var wire 1 &! fetch_instr_pc [73] $end
$var wire 1 '! fetch_instr_pc [72] $end
$var wire 1 (! fetch_instr_pc [71] $end
$var wire 1 )! fetch_instr_pc [70] $end
$var wire 1 *! fetch_instr_pc [69] $end
$var wire 1 +! fetch_instr_pc [68] $end
$var wire 1 ,! fetch_instr_pc [67] $end
$var wire 1 -! fetch_instr_pc [66] $end
$var wire 1 .! fetch_instr_pc [65] $end
$var wire 1 /! fetch_instr_pc [64] $end
$var wire 1 0! fetch_instr_pc [63] $end
$var wire 1 1! fetch_instr_pc [62] $end
$var wire 1 2! fetch_instr_pc [61] $end
$var wire 1 3! fetch_instr_pc [60] $end
$var wire 1 4! fetch_instr_pc [59] $end
$var wire 1 5! fetch_instr_pc [58] $end
$var wire 1 6! fetch_instr_pc [57] $end
$var wire 1 7! fetch_instr_pc [56] $end
$var wire 1 8! fetch_instr_pc [55] $end
$var wire 1 9! fetch_instr_pc [54] $end
$var wire 1 :! fetch_instr_pc [53] $end
$var wire 1 ;! fetch_instr_pc [52] $end
$var wire 1 <! fetch_instr_pc [51] $end
$var wire 1 =! fetch_instr_pc [50] $end
$var wire 1 >! fetch_instr_pc [49] $end
$var wire 1 ?! fetch_instr_pc [48] $end
$var wire 1 @! fetch_instr_pc [47] $end
$var wire 1 A! fetch_instr_pc [46] $end
$var wire 1 B! fetch_instr_pc [45] $end
$var wire 1 C! fetch_instr_pc [44] $end
$var wire 1 D! fetch_instr_pc [43] $end
$var wire 1 E! fetch_instr_pc [42] $end
$var wire 1 F! fetch_instr_pc [41] $end
$var wire 1 G! fetch_instr_pc [40] $end
$var wire 1 H! fetch_instr_pc [39] $end
$var wire 1 I! fetch_instr_pc [38] $end
$var wire 1 J! fetch_instr_pc [37] $end
$var wire 1 K! fetch_instr_pc [36] $end
$var wire 1 L! fetch_instr_pc [35] $end
$var wire 1 M! fetch_instr_pc [34] $end
$var wire 1 N! fetch_instr_pc [33] $end
$var wire 1 O! fetch_instr_pc [32] $end
$var wire 1 P! fetch_instr_pc [31] $end
$var wire 1 Q! fetch_instr_pc [30] $end
$var wire 1 R! fetch_instr_pc [29] $end
$var wire 1 S! fetch_instr_pc [28] $end
$var wire 1 T! fetch_instr_pc [27] $end
$var wire 1 U! fetch_instr_pc [26] $end
$var wire 1 V! fetch_instr_pc [25] $end
$var wire 1 W! fetch_instr_pc [24] $end
$var wire 1 X! fetch_instr_pc [23] $end
$var wire 1 Y! fetch_instr_pc [22] $end
$var wire 1 Z! fetch_instr_pc [21] $end
$var wire 1 [! fetch_instr_pc [20] $end
$var wire 1 \! fetch_instr_pc [19] $end
$var wire 1 ]! fetch_instr_pc [18] $end
$var wire 1 ^! fetch_instr_pc [17] $end
$var wire 1 _! fetch_instr_pc [16] $end
$var wire 1 `! fetch_instr_pc [15] $end
$var wire 1 a! fetch_instr_pc [14] $end
$var wire 1 b! fetch_instr_pc [13] $end
$var wire 1 c! fetch_instr_pc [12] $end
$var wire 1 d! fetch_instr_pc [11] $end
$var wire 1 e! fetch_instr_pc [10] $end
$var wire 1 f! fetch_instr_pc [9] $end
$var wire 1 g! fetch_instr_pc [8] $end
$var wire 1 h! fetch_instr_pc [7] $end
$var wire 1 i! fetch_instr_pc [6] $end
$var wire 1 j! fetch_instr_pc [5] $end
$var wire 1 k! fetch_instr_pc [4] $end
$var wire 1 l! fetch_instr_pc [3] $end
$var wire 1 m! fetch_instr_pc [2] $end
$var wire 1 n! fetch_instr_pc [1] $end
$var wire 1 o! fetch_instr_pc [0] $end
$var wire 1 p! write_fifo $end
$var wire 1 q! arvalid $end
$var wire 1 r! rready $end
$var wire 1 s! rvalid $end
$var wire 1 t! arready $end
$var wire 1 u! rdata [63] $end
$var wire 1 v! rdata [62] $end
$var wire 1 w! rdata [61] $end
$var wire 1 x! rdata [60] $end
$var wire 1 y! rdata [59] $end
$var wire 1 z! rdata [58] $end
$var wire 1 {! rdata [57] $end
$var wire 1 |! rdata [56] $end
$var wire 1 }! rdata [55] $end
$var wire 1 ~! rdata [54] $end
$var wire 1 !" rdata [53] $end
$var wire 1 "" rdata [52] $end
$var wire 1 #" rdata [51] $end
$var wire 1 $" rdata [50] $end
$var wire 1 %" rdata [49] $end
$var wire 1 &" rdata [48] $end
$var wire 1 '" rdata [47] $end
$var wire 1 (" rdata [46] $end
$var wire 1 )" rdata [45] $end
$var wire 1 *" rdata [44] $end
$var wire 1 +" rdata [43] $end
$var wire 1 ," rdata [42] $end
$var wire 1 -" rdata [41] $end
$var wire 1 ." rdata [40] $end
$var wire 1 /" rdata [39] $end
$var wire 1 0" rdata [38] $end
$var wire 1 1" rdata [37] $end
$var wire 1 2" rdata [36] $end
$var wire 1 3" rdata [35] $end
$var wire 1 4" rdata [34] $end
$var wire 1 5" rdata [33] $end
$var wire 1 6" rdata [32] $end
$var wire 1 7" rdata [31] $end
$var wire 1 8" rdata [30] $end
$var wire 1 9" rdata [29] $end
$var wire 1 :" rdata [28] $end
$var wire 1 ;" rdata [27] $end
$var wire 1 <" rdata [26] $end
$var wire 1 =" rdata [25] $end
$var wire 1 >" rdata [24] $end
$var wire 1 ?" rdata [23] $end
$var wire 1 @" rdata [22] $end
$var wire 1 A" rdata [21] $end
$var wire 1 B" rdata [20] $end
$var wire 1 C" rdata [19] $end
$var wire 1 D" rdata [18] $end
$var wire 1 E" rdata [17] $end
$var wire 1 F" rdata [16] $end
$var wire 1 G" rdata [15] $end
$var wire 1 H" rdata [14] $end
$var wire 1 I" rdata [13] $end
$var wire 1 J" rdata [12] $end
$var wire 1 K" rdata [11] $end
$var wire 1 L" rdata [10] $end
$var wire 1 M" rdata [9] $end
$var wire 1 N" rdata [8] $end
$var wire 1 O" rdata [7] $end
$var wire 1 P" rdata [6] $end
$var wire 1 Q" rdata [5] $end
$var wire 1 R" rdata [4] $end
$var wire 1 S" rdata [3] $end
$var wire 1 T" rdata [2] $end
$var wire 1 U" rdata [1] $end
$var wire 1 V" rdata [0] $end
$var wire 1 W" arburst [1] $end
$var wire 1 X" arburst [0] $end
$var wire 1 Y" arsize [2] $end
$var wire 1 Z" arsize [1] $end
$var wire 1 [" arsize [0] $end
$var wire 1 \" arlen [7] $end
$var wire 1 ]" arlen [6] $end
$var wire 1 ^" arlen [5] $end
$var wire 1 _" arlen [4] $end
$var wire 1 `" arlen [3] $end
$var wire 1 a" arlen [2] $end
$var wire 1 b" arlen [1] $end
$var wire 1 c" arlen [0] $end
$var wire 1 d" araddr [31] $end
$var wire 1 e" araddr [30] $end
$var wire 1 f" araddr [29] $end
$var wire 1 g" araddr [28] $end
$var wire 1 h" araddr [27] $end
$var wire 1 i" araddr [26] $end
$var wire 1 j" araddr [25] $end
$var wire 1 k" araddr [24] $end
$var wire 1 l" araddr [23] $end
$var wire 1 m" araddr [22] $end
$var wire 1 n" araddr [21] $end
$var wire 1 o" araddr [20] $end
$var wire 1 p" araddr [19] $end
$var wire 1 q" araddr [18] $end
$var wire 1 r" araddr [17] $end
$var wire 1 s" araddr [16] $end
$var wire 1 t" araddr [15] $end
$var wire 1 u" araddr [14] $end
$var wire 1 v" araddr [13] $end
$var wire 1 w" araddr [12] $end
$var wire 1 x" araddr [11] $end
$var wire 1 y" araddr [10] $end
$var wire 1 z" araddr [9] $end
$var wire 1 {" araddr [8] $end
$var wire 1 |" araddr [7] $end
$var wire 1 }" araddr [6] $end
$var wire 1 ~" araddr [5] $end
$var wire 1 !# araddr [4] $end
$var wire 1 "# araddr [3] $end
$var wire 1 ## araddr [2] $end
$var wire 1 $# araddr [1] $end
$var wire 1 %# araddr [0] $end
$var wire 1 &# rlast $end

$scope module ICache_instance $end
$var wire 1 ) clk $end
$var wire 1 * rst_n $end
$var wire 1 q! arvalid $end
$var wire 1 d" araddr [31] $end
$var wire 1 e" araddr [30] $end
$var wire 1 f" araddr [29] $end
$var wire 1 g" araddr [28] $end
$var wire 1 h" araddr [27] $end
$var wire 1 i" araddr [26] $end
$var wire 1 j" araddr [25] $end
$var wire 1 k" araddr [24] $end
$var wire 1 l" araddr [23] $end
$var wire 1 m" araddr [22] $end
$var wire 1 n" araddr [21] $end
$var wire 1 o" araddr [20] $end
$var wire 1 p" araddr [19] $end
$var wire 1 q" araddr [18] $end
$var wire 1 r" araddr [17] $end
$var wire 1 s" araddr [16] $end
$var wire 1 t" araddr [15] $end
$var wire 1 u" araddr [14] $end
$var wire 1 v" araddr [13] $end
$var wire 1 w" araddr [12] $end
$var wire 1 x" araddr [11] $end
$var wire 1 y" araddr [10] $end
$var wire 1 z" araddr [9] $end
$var wire 1 {" araddr [8] $end
$var wire 1 |" araddr [7] $end
$var wire 1 }" araddr [6] $end
$var wire 1 ~" araddr [5] $end
$var wire 1 !# araddr [4] $end
$var wire 1 "# araddr [3] $end
$var wire 1 ## araddr [2] $end
$var wire 1 $# araddr [1] $end
$var wire 1 %# araddr [0] $end
$var wire 1 W" arburst [1] $end
$var wire 1 X" arburst [0] $end
$var wire 1 Y" arsize [2] $end
$var wire 1 Z" arsize [1] $end
$var wire 1 [" arsize [0] $end
$var wire 1 \" arlen [7] $end
$var wire 1 ]" arlen [6] $end
$var wire 1 ^" arlen [5] $end
$var wire 1 _" arlen [4] $end
$var wire 1 `" arlen [3] $end
$var wire 1 a" arlen [2] $end
$var wire 1 b" arlen [1] $end
$var wire 1 c" arlen [0] $end
$var reg 1 '# arready $end
$var wire 1 r! rready $end
$var reg 1 (# rvalid $end
$var reg 64 )# rdata [63:0] $end
$var reg 1 *# rlast $end
$upscope $end

$scope module Cache_Controller_instance $end
$var wire 1 ) clk $end
$var wire 1 * rst_n $end
$var wire 1 s! rvalid $end
$var wire 1 &# rlast $end
$var wire 1 u! rdata [63] $end
$var wire 1 v! rdata [62] $end
$var wire 1 w! rdata [61] $end
$var wire 1 x! rdata [60] $end
$var wire 1 y! rdata [59] $end
$var wire 1 z! rdata [58] $end
$var wire 1 {! rdata [57] $end
$var wire 1 |! rdata [56] $end
$var wire 1 }! rdata [55] $end
$var wire 1 ~! rdata [54] $end
$var wire 1 !" rdata [53] $end
$var wire 1 "" rdata [52] $end
$var wire 1 #" rdata [51] $end
$var wire 1 $" rdata [50] $end
$var wire 1 %" rdata [49] $end
$var wire 1 &" rdata [48] $end
$var wire 1 '" rdata [47] $end
$var wire 1 (" rdata [46] $end
$var wire 1 )" rdata [45] $end
$var wire 1 *" rdata [44] $end
$var wire 1 +" rdata [43] $end
$var wire 1 ," rdata [42] $end
$var wire 1 -" rdata [41] $end
$var wire 1 ." rdata [40] $end
$var wire 1 /" rdata [39] $end
$var wire 1 0" rdata [38] $end
$var wire 1 1" rdata [37] $end
$var wire 1 2" rdata [36] $end
$var wire 1 3" rdata [35] $end
$var wire 1 4" rdata [34] $end
$var wire 1 5" rdata [33] $end
$var wire 1 6" rdata [32] $end
$var wire 1 7" rdata [31] $end
$var wire 1 8" rdata [30] $end
$var wire 1 9" rdata [29] $end
$var wire 1 :" rdata [28] $end
$var wire 1 ;" rdata [27] $end
$var wire 1 <" rdata [26] $end
$var wire 1 =" rdata [25] $end
$var wire 1 >" rdata [24] $end
$var wire 1 ?" rdata [23] $end
$var wire 1 @" rdata [22] $end
$var wire 1 A" rdata [21] $end
$var wire 1 B" rdata [20] $end
$var wire 1 C" rdata [19] $end
$var wire 1 D" rdata [18] $end
$var wire 1 E" rdata [17] $end
$var wire 1 F" rdata [16] $end
$var wire 1 G" rdata [15] $end
$var wire 1 H" rdata [14] $end
$var wire 1 I" rdata [13] $end
$var wire 1 J" rdata [12] $end
$var wire 1 K" rdata [11] $end
$var wire 1 L" rdata [10] $end
$var wire 1 M" rdata [9] $end
$var wire 1 N" rdata [8] $end
$var wire 1 O" rdata [7] $end
$var wire 1 P" rdata [6] $end
$var wire 1 Q" rdata [5] $end
$var wire 1 R" rdata [4] $end
$var wire 1 S" rdata [3] $end
$var wire 1 T" rdata [2] $end
$var wire 1 U" rdata [1] $end
$var wire 1 V" rdata [0] $end
$var wire 1 t! arready $end
$var wire 1 + jump $end
$var wire 1 , jump_accept $end
$var wire 1 - jump_addr [31] $end
$var wire 1 . jump_addr [30] $end
$var wire 1 / jump_addr [29] $end
$var wire 1 0 jump_addr [28] $end
$var wire 1 1 jump_addr [27] $end
$var wire 1 2 jump_addr [26] $end
$var wire 1 3 jump_addr [25] $end
$var wire 1 4 jump_addr [24] $end
$var wire 1 5 jump_addr [23] $end
$var wire 1 6 jump_addr [22] $end
$var wire 1 7 jump_addr [21] $end
$var wire 1 8 jump_addr [20] $end
$var wire 1 9 jump_addr [19] $end
$var wire 1 : jump_addr [18] $end
$var wire 1 ; jump_addr [17] $end
$var wire 1 < jump_addr [16] $end
$var wire 1 = jump_addr [15] $end
$var wire 1 > jump_addr [14] $end
$var wire 1 ? jump_addr [13] $end
$var wire 1 @ jump_addr [12] $end
$var wire 1 A jump_addr [11] $end
$var wire 1 B jump_addr [10] $end
$var wire 1 C jump_addr [9] $end
$var wire 1 D jump_addr [8] $end
$var wire 1 E jump_addr [7] $end
$var wire 1 F jump_addr [6] $end
$var wire 1 G jump_addr [5] $end
$var wire 1 H jump_addr [4] $end
$var wire 1 I jump_addr [3] $end
$var wire 1 J jump_addr [2] $end
$var wire 1 K jump_addr [1] $end
$var wire 1 L jump_addr [0] $end
$var wire 1 M stop_fetch $end
$var wire 1 p! write_fifo $end
$var wire 1 r! rready $end
$var wire 1 d" araddr [31] $end
$var wire 1 e" araddr [30] $end
$var wire 1 f" araddr [29] $end
$var wire 1 g" araddr [28] $end
$var wire 1 h" araddr [27] $end
$var wire 1 i" araddr [26] $end
$var wire 1 j" araddr [25] $end
$var wire 1 k" araddr [24] $end
$var wire 1 l" araddr [23] $end
$var wire 1 m" araddr [22] $end
$var wire 1 n" araddr [21] $end
$var wire 1 o" araddr [20] $end
$var wire 1 p" araddr [19] $end
$var wire 1 q" araddr [18] $end
$var wire 1 r" araddr [17] $end
$var wire 1 s" araddr [16] $end
$var wire 1 t" araddr [15] $end
$var wire 1 u" araddr [14] $end
$var wire 1 v" araddr [13] $end
$var wire 1 w" araddr [12] $end
$var wire 1 x" araddr [11] $end
$var wire 1 y" araddr [10] $end
$var wire 1 z" araddr [9] $end
$var wire 1 {" araddr [8] $end
$var wire 1 |" araddr [7] $end
$var wire 1 }" araddr [6] $end
$var wire 1 ~" araddr [5] $end
$var wire 1 !# araddr [4] $end
$var wire 1 "# araddr [3] $end
$var wire 1 ## araddr [2] $end
$var wire 1 $# araddr [1] $end
$var wire 1 %# araddr [0] $end
$var wire 1 q! arvalid $end
$var wire 1 W" arburst [1] $end
$var wire 1 X" arburst [0] $end
$var wire 1 Y" arsize [2] $end
$var wire 1 Z" arsize [1] $end
$var wire 1 [" arsize [0] $end
$var wire 1 \" arlen [7] $end
$var wire 1 ]" arlen [6] $end
$var wire 1 ^" arlen [5] $end
$var wire 1 _" arlen [4] $end
$var wire 1 `" arlen [3] $end
$var wire 1 a" arlen [2] $end
$var wire 1 b" arlen [1] $end
$var wire 1 c" arlen [0] $end
$var wire 1 N fetch_instr_pc [127] $end
$var wire 1 O fetch_instr_pc [126] $end
$var wire 1 P fetch_instr_pc [125] $end
$var wire 1 Q fetch_instr_pc [124] $end
$var wire 1 R fetch_instr_pc [123] $end
$var wire 1 S fetch_instr_pc [122] $end
$var wire 1 T fetch_instr_pc [121] $end
$var wire 1 U fetch_instr_pc [120] $end
$var wire 1 V fetch_instr_pc [119] $end
$var wire 1 W fetch_instr_pc [118] $end
$var wire 1 X fetch_instr_pc [117] $end
$var wire 1 Y fetch_instr_pc [116] $end
$var wire 1 Z fetch_instr_pc [115] $end
$var wire 1 [ fetch_instr_pc [114] $end
$var wire 1 \ fetch_instr_pc [113] $end
$var wire 1 ] fetch_instr_pc [112] $end
$var wire 1 ^ fetch_instr_pc [111] $end
$var wire 1 _ fetch_instr_pc [110] $end
$var wire 1 ` fetch_instr_pc [109] $end
$var wire 1 a fetch_instr_pc [108] $end
$var wire 1 b fetch_instr_pc [107] $end
$var wire 1 c fetch_instr_pc [106] $end
$var wire 1 d fetch_instr_pc [105] $end
$var wire 1 e fetch_instr_pc [104] $end
$var wire 1 f fetch_instr_pc [103] $end
$var wire 1 g fetch_instr_pc [102] $end
$var wire 1 h fetch_instr_pc [101] $end
$var wire 1 i fetch_instr_pc [100] $end
$var wire 1 j fetch_instr_pc [99] $end
$var wire 1 k fetch_instr_pc [98] $end
$var wire 1 l fetch_instr_pc [97] $end
$var wire 1 m fetch_instr_pc [96] $end
$var wire 1 n fetch_instr_pc [95] $end
$var wire 1 o fetch_instr_pc [94] $end
$var wire 1 p fetch_instr_pc [93] $end
$var wire 1 q fetch_instr_pc [92] $end
$var wire 1 r fetch_instr_pc [91] $end
$var wire 1 s fetch_instr_pc [90] $end
$var wire 1 t fetch_instr_pc [89] $end
$var wire 1 u fetch_instr_pc [88] $end
$var wire 1 v fetch_instr_pc [87] $end
$var wire 1 w fetch_instr_pc [86] $end
$var wire 1 x fetch_instr_pc [85] $end
$var wire 1 y fetch_instr_pc [84] $end
$var wire 1 z fetch_instr_pc [83] $end
$var wire 1 { fetch_instr_pc [82] $end
$var wire 1 | fetch_instr_pc [81] $end
$var wire 1 } fetch_instr_pc [80] $end
$var wire 1 ~ fetch_instr_pc [79] $end
$var wire 1 !! fetch_instr_pc [78] $end
$var wire 1 "! fetch_instr_pc [77] $end
$var wire 1 #! fetch_instr_pc [76] $end
$var wire 1 $! fetch_instr_pc [75] $end
$var wire 1 %! fetch_instr_pc [74] $end
$var wire 1 &! fetch_instr_pc [73] $end
$var wire 1 '! fetch_instr_pc [72] $end
$var wire 1 (! fetch_instr_pc [71] $end
$var wire 1 )! fetch_instr_pc [70] $end
$var wire 1 *! fetch_instr_pc [69] $end
$var wire 1 +! fetch_instr_pc [68] $end
$var wire 1 ,! fetch_instr_pc [67] $end
$var wire 1 -! fetch_instr_pc [66] $end
$var wire 1 .! fetch_instr_pc [65] $end
$var wire 1 /! fetch_instr_pc [64] $end
$var wire 1 0! fetch_instr_pc [63] $end
$var wire 1 1! fetch_instr_pc [62] $end
$var wire 1 2! fetch_instr_pc [61] $end
$var wire 1 3! fetch_instr_pc [60] $end
$var wire 1 4! fetch_instr_pc [59] $end
$var wire 1 5! fetch_instr_pc [58] $end
$var wire 1 6! fetch_instr_pc [57] $end
$var wire 1 7! fetch_instr_pc [56] $end
$var wire 1 8! fetch_instr_pc [55] $end
$var wire 1 9! fetch_instr_pc [54] $end
$var wire 1 :! fetch_instr_pc [53] $end
$var wire 1 ;! fetch_instr_pc [52] $end
$var wire 1 <! fetch_instr_pc [51] $end
$var wire 1 =! fetch_instr_pc [50] $end
$var wire 1 >! fetch_instr_pc [49] $end
$var wire 1 ?! fetch_instr_pc [48] $end
$var wire 1 @! fetch_instr_pc [47] $end
$var wire 1 A! fetch_instr_pc [46] $end
$var wire 1 B! fetch_instr_pc [45] $end
$var wire 1 C! fetch_instr_pc [44] $end
$var wire 1 D! fetch_instr_pc [43] $end
$var wire 1 E! fetch_instr_pc [42] $end
$var wire 1 F! fetch_instr_pc [41] $end
$var wire 1 G! fetch_instr_pc [40] $end
$var wire 1 H! fetch_instr_pc [39] $end
$var wire 1 I! fetch_instr_pc [38] $end
$var wire 1 J! fetch_instr_pc [37] $end
$var wire 1 K! fetch_instr_pc [36] $end
$var wire 1 L! fetch_instr_pc [35] $end
$var wire 1 M! fetch_instr_pc [34] $end
$var wire 1 N! fetch_instr_pc [33] $end
$var wire 1 O! fetch_instr_pc [32] $end
$var wire 1 P! fetch_instr_pc [31] $end
$var wire 1 Q! fetch_instr_pc [30] $end
$var wire 1 R! fetch_instr_pc [29] $end
$var wire 1 S! fetch_instr_pc [28] $end
$var wire 1 T! fetch_instr_pc [27] $end
$var wire 1 U! fetch_instr_pc [26] $end
$var wire 1 V! fetch_instr_pc [25] $end
$var wire 1 W! fetch_instr_pc [24] $end
$var wire 1 X! fetch_instr_pc [23] $end
$var wire 1 Y! fetch_instr_pc [22] $end
$var wire 1 Z! fetch_instr_pc [21] $end
$var wire 1 [! fetch_instr_pc [20] $end
$var wire 1 \! fetch_instr_pc [19] $end
$var wire 1 ]! fetch_instr_pc [18] $end
$var wire 1 ^! fetch_instr_pc [17] $end
$var wire 1 _! fetch_instr_pc [16] $end
$var wire 1 `! fetch_instr_pc [15] $end
$var wire 1 a! fetch_instr_pc [14] $end
$var wire 1 b! fetch_instr_pc [13] $end
$var wire 1 c! fetch_instr_pc [12] $end
$var wire 1 d! fetch_instr_pc [11] $end
$var wire 1 e! fetch_instr_pc [10] $end
$var wire 1 f! fetch_instr_pc [9] $end
$var wire 1 g! fetch_instr_pc [8] $end
$var wire 1 h! fetch_instr_pc [7] $end
$var wire 1 i! fetch_instr_pc [6] $end
$var wire 1 j! fetch_instr_pc [5] $end
$var wire 1 k! fetch_instr_pc [4] $end
$var wire 1 l! fetch_instr_pc [3] $end
$var wire 1 m! fetch_instr_pc [2] $end
$var wire 1 n! fetch_instr_pc [1] $end
$var wire 1 o! fetch_instr_pc [0] $end
$var wire 1 +# stall $end

$scope module PC_Control_instance $end
$var wire 1 ) clk $end
$var wire 1 * rst_n $end
$var wire 1 +# stall $end
$var wire 1 + jump $end
$var wire 1 , jump_accept $end
$var wire 1 - jump_addr [31] $end
$var wire 1 . jump_addr [30] $end
$var wire 1 / jump_addr [29] $end
$var wire 1 0 jump_addr [28] $end
$var wire 1 1 jump_addr [27] $end
$var wire 1 2 jump_addr [26] $end
$var wire 1 3 jump_addr [25] $end
$var wire 1 4 jump_addr [24] $end
$var wire 1 5 jump_addr [23] $end
$var wire 1 6 jump_addr [22] $end
$var wire 1 7 jump_addr [21] $end
$var wire 1 8 jump_addr [20] $end
$var wire 1 9 jump_addr [19] $end
$var wire 1 : jump_addr [18] $end
$var wire 1 ; jump_addr [17] $end
$var wire 1 < jump_addr [16] $end
$var wire 1 = jump_addr [15] $end
$var wire 1 > jump_addr [14] $end
$var wire 1 ? jump_addr [13] $end
$var wire 1 @ jump_addr [12] $end
$var wire 1 A jump_addr [11] $end
$var wire 1 B jump_addr [10] $end
$var wire 1 C jump_addr [9] $end
$var wire 1 D jump_addr [8] $end
$var wire 1 E jump_addr [7] $end
$var wire 1 F jump_addr [6] $end
$var wire 1 G jump_addr [5] $end
$var wire 1 H jump_addr [4] $end
$var wire 1 I jump_addr [3] $end
$var wire 1 J jump_addr [2] $end
$var wire 1 K jump_addr [1] $end
$var wire 1 L jump_addr [0] $end
$var reg 32 ,# pc_addr [31:0] $end
$var wire 1 -# next_pc [31] $end
$var wire 1 .# next_pc [30] $end
$var wire 1 /# next_pc [29] $end
$var wire 1 0# next_pc [28] $end
$var wire 1 1# next_pc [27] $end
$var wire 1 2# next_pc [26] $end
$var wire 1 3# next_pc [25] $end
$var wire 1 4# next_pc [24] $end
$var wire 1 5# next_pc [23] $end
$var wire 1 6# next_pc [22] $end
$var wire 1 7# next_pc [21] $end
$var wire 1 8# next_pc [20] $end
$var wire 1 9# next_pc [19] $end
$var wire 1 :# next_pc [18] $end
$var wire 1 ;# next_pc [17] $end
$var wire 1 <# next_pc [16] $end
$var wire 1 =# next_pc [15] $end
$var wire 1 ># next_pc [14] $end
$var wire 1 ?# next_pc [13] $end
$var wire 1 @# next_pc [12] $end
$var wire 1 A# next_pc [11] $end
$var wire 1 B# next_pc [10] $end
$var wire 1 C# next_pc [9] $end
$var wire 1 D# next_pc [8] $end
$var wire 1 E# next_pc [7] $end
$var wire 1 F# next_pc [6] $end
$var wire 1 G# next_pc [5] $end
$var wire 1 H# next_pc [4] $end
$var wire 1 I# next_pc [3] $end
$var wire 1 J# next_pc [2] $end
$var wire 1 K# next_pc [1] $end
$var wire 1 L# next_pc [0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
x#
x$
bx %
x&
b0 '
0(
1'#
0(#
bx )#
0*#
b0 ,#
1q!
xr!
0s!
1t!
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
x{!
xz!
xy!
xx!
xw!
xv!
xu!
0X"
0W"
0["
1Z"
0Y"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0&#
z+#
xL#
xK#
xJ#
xI#
xH#
xG#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
x:#
x9#
x8#
x7#
x6#
x5#
x4#
x3#
x2#
x1#
x0#
x/#
x.#
x-#
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
0*
0)
0o!
0n!
0m!
0l!
0k!
0j!
0i!
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0I!
0H!
0G!
0F!
0E!
0D!
0C!
0B!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
09!
08!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0p!
$end
#10000
1!
1)
1(#
1*#
b1010000011011011100000000000000010100000100110111 )#
1s!
1&#
1V"
1U"
1T"
0S"
1R"
1Q"
0P"
0O"
1N"
0M"
0L"
0K"
0J"
0I"
1H"
0G"
1F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
16"
15"
14"
03"
12"
11"
00"
1/"
1."
0-"
0,"
0+"
0*"
0)"
1("
0'"
1&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0u!
1p!
1(
1m!
1O!
1N!
1M!
1K!
1J!
1G!
1A!
1?!
1m
1l
1k
1i
1h
1f
1e
1_
1]
b10100000110110111000000000000000000000000000000000000000000000001010000010011011100000000000000000000000000000100 '
#20000
1"
0#
0$
b0 %
0&
0!
0+
0,
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0M
1r!
0L#
0K#
0J#
1I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0-#
1*
0)
#30000
1!
1)
b1000 ,#
0(#
1(#
1"#
0I#
1H#
1l!
1,!
b10100000110110111000000000000000000000000000010000000000000000001010000010011011100000000000000000000000000001100 '
#40000
0!
0)
#50000
1!
1)
0(#
1(#
b11001000001001000001000001100000000000000010100001000110111 )#
b10000 ,#
0"#
1!#
1I#
0N"
1M"
04"
02"
01"
0."
1)"
0("
1~!
1{!
1z!
0l!
1k!
0G!
1F!
0,!
1+!
0k
0i
0h
0e
1`
0_
1W
1T
1S
b110010000010010000010000011000000000000000000000000000100000000000000000001010000100011011100000000000000000000000000010100 '
#60000
0!
0)
#70000
1!
1)
b11000 ,#
0(#
1(#
bx )#
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
x{!
xz!
xy!
xx!
xw!
xv!
xu!
1"#
0I#
0H#
1G#
1l!
xO!
xN!
xM!
xL!
xK!
xJ!
xI!
xH!
xG!
xF!
xE!
xD!
xC!
xB!
xA!
x@!
x?!
x>!
x=!
x<!
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x4!
x3!
x2!
x1!
x0!
1,!
xm
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
bx00000000000000000000000000011000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000000000011100 '
#80000
0!
0)
#90000
1!
1)
0(#
1(#
b100000 ,#
0"#
0!#
1~"
1I#
0l!
0k!
1j!
0,!
0+!
1*!
bx00000000000000000000000000100000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000000000100100 '
#100000
0!
0)
#110000
1!
1)
b101000 ,#
0(#
1(#
1"#
0I#
1H#
1l!
1,!
bx00000000000000000000000000101000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000000000101100 '
