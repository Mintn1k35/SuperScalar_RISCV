$date
	Fri Jan 12 01:00:00 2024
$end
$version
	Questa Intel Starter FPGA Edition Version 2021.2
$end
$timescale
	1ps
$end

$scope module tb_ICache $end
$var reg 1 ! clk $end
$var reg 1 " rst_n $end
$var reg 1 # arvalid $end
$var reg 32 $ araddr [31:0] $end
$var reg 2 % arburst [1:0] $end
$var reg 3 & arsize [2:0] $end
$var reg 8 ' arlen [7:0] $end
$var reg 1 ( rready $end
$var reg 1 ) arready $end
$var reg 1 * rvalid $end
$var reg 64 + rdata [63:0] $end
$var reg 1 , rlast $end

$scope module ICache_instance $end
$var wire 1 - clk $end
$var wire 1 . rst_n $end
$var wire 1 / arvalid $end
$var wire 1 0 araddr [31] $end
$var wire 1 1 araddr [30] $end
$var wire 1 2 araddr [29] $end
$var wire 1 3 araddr [28] $end
$var wire 1 4 araddr [27] $end
$var wire 1 5 araddr [26] $end
$var wire 1 6 araddr [25] $end
$var wire 1 7 araddr [24] $end
$var wire 1 8 araddr [23] $end
$var wire 1 9 araddr [22] $end
$var wire 1 : araddr [21] $end
$var wire 1 ; araddr [20] $end
$var wire 1 < araddr [19] $end
$var wire 1 = araddr [18] $end
$var wire 1 > araddr [17] $end
$var wire 1 ? araddr [16] $end
$var wire 1 @ araddr [15] $end
$var wire 1 A araddr [14] $end
$var wire 1 B araddr [13] $end
$var wire 1 C araddr [12] $end
$var wire 1 D araddr [11] $end
$var wire 1 E araddr [10] $end
$var wire 1 F araddr [9] $end
$var wire 1 G araddr [8] $end
$var wire 1 H araddr [7] $end
$var wire 1 I araddr [6] $end
$var wire 1 J araddr [5] $end
$var wire 1 K araddr [4] $end
$var wire 1 L araddr [3] $end
$var wire 1 M araddr [2] $end
$var wire 1 N araddr [1] $end
$var wire 1 O araddr [0] $end
$var wire 1 P arburst [1] $end
$var wire 1 Q arburst [0] $end
$var wire 1 R arsize [2] $end
$var wire 1 S arsize [1] $end
$var wire 1 T arsize [0] $end
$var wire 1 U arlen [7] $end
$var wire 1 V arlen [6] $end
$var wire 1 W arlen [5] $end
$var wire 1 X arlen [4] $end
$var wire 1 Y arlen [3] $end
$var wire 1 Z arlen [2] $end
$var wire 1 [ arlen [1] $end
$var wire 1 \ arlen [0] $end
$var reg 1 ] arready $end
$var wire 1 ^ rready $end
$var reg 1 _ rvalid $end
$var reg 64 ` rdata [63:0] $end
$var reg 1 a rlast $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
x#
bx $
bx %
bx &
bx '
x(
1)
0*
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx +
0,
1]
0_
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx `
0a
x^
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
0.
0-
$end
#10000
1!
1-
#20000
1"
b0 $
1(
1#
0!
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
1^
1/
1.
0-
#30000
1!
1-
1_
1a
b1111000011011011100000000000000011110000110110111 `
b1111000011011011100000000000000011110000110110111 +
1,
1*
#40000
0!
0-
#50000
1!
1-
0_
1_
#60000
b1000 $
0!
1L
0-
#70000
1!
1-
0_
1_
b110001000000100011001100000000001100010000001000110011 `
b110001000000100011001100000000001100010000001000110011 +
#80000
0!
0-
#90000
1!
1-
0_
1_
#100000
0!
0-
#110000
1!
1-
0_
1_
#120000
0!
0-
#130000
1!
1-
0_
1_
#140000
0!
0-
#150000
1!
1-
0_
1_
