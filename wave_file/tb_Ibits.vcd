$date
	Tue Dec 26 13:14:46 2023
$end
$version
	Questa Intel Starter FPGA Edition Version 2021.2
$end
$timescale
	1ps
$end

$scope module tb_Ibits $end
$var reg 1 ! clk $end
$var reg 1 " rst_n $end
$var reg 1 # rvalid $end
$var reg 1 $ rlast $end
$var reg 32 % rdata [31:0] $end
$var reg 32 & fetch_pc [31:0] $end
$var reg 1 ' jump $end
$var reg 1 ( jump_wait $end
$var reg 1 ) jump_accept $end
$var reg 1 * busy $end
$var reg 1 + rready $end
$var reg 65 , fetch_instr_pc [64:0] $end
$var reg 1 - buf_full $end

$scope module Ibits_instance $end
$var wire 1 . clk $end
$var wire 1 / rst_n $end
$var wire 1 0 rvalid $end
$var wire 1 1 rlast $end
$var wire 1 2 rdata [31] $end
$var wire 1 3 rdata [30] $end
$var wire 1 4 rdata [29] $end
$var wire 1 5 rdata [28] $end
$var wire 1 6 rdata [27] $end
$var wire 1 7 rdata [26] $end
$var wire 1 8 rdata [25] $end
$var wire 1 9 rdata [24] $end
$var wire 1 : rdata [23] $end
$var wire 1 ; rdata [22] $end
$var wire 1 < rdata [21] $end
$var wire 1 = rdata [20] $end
$var wire 1 > rdata [19] $end
$var wire 1 ? rdata [18] $end
$var wire 1 @ rdata [17] $end
$var wire 1 A rdata [16] $end
$var wire 1 B rdata [15] $end
$var wire 1 C rdata [14] $end
$var wire 1 D rdata [13] $end
$var wire 1 E rdata [12] $end
$var wire 1 F rdata [11] $end
$var wire 1 G rdata [10] $end
$var wire 1 H rdata [9] $end
$var wire 1 I rdata [8] $end
$var wire 1 J rdata [7] $end
$var wire 1 K rdata [6] $end
$var wire 1 L rdata [5] $end
$var wire 1 M rdata [4] $end
$var wire 1 N rdata [3] $end
$var wire 1 O rdata [2] $end
$var wire 1 P rdata [1] $end
$var wire 1 Q rdata [0] $end
$var wire 1 R fetch_pc [31] $end
$var wire 1 S fetch_pc [30] $end
$var wire 1 T fetch_pc [29] $end
$var wire 1 U fetch_pc [28] $end
$var wire 1 V fetch_pc [27] $end
$var wire 1 W fetch_pc [26] $end
$var wire 1 X fetch_pc [25] $end
$var wire 1 Y fetch_pc [24] $end
$var wire 1 Z fetch_pc [23] $end
$var wire 1 [ fetch_pc [22] $end
$var wire 1 \ fetch_pc [21] $end
$var wire 1 ] fetch_pc [20] $end
$var wire 1 ^ fetch_pc [19] $end
$var wire 1 _ fetch_pc [18] $end
$var wire 1 ` fetch_pc [17] $end
$var wire 1 a fetch_pc [16] $end
$var wire 1 b fetch_pc [15] $end
$var wire 1 c fetch_pc [14] $end
$var wire 1 d fetch_pc [13] $end
$var wire 1 e fetch_pc [12] $end
$var wire 1 f fetch_pc [11] $end
$var wire 1 g fetch_pc [10] $end
$var wire 1 h fetch_pc [9] $end
$var wire 1 i fetch_pc [8] $end
$var wire 1 j fetch_pc [7] $end
$var wire 1 k fetch_pc [6] $end
$var wire 1 l fetch_pc [5] $end
$var wire 1 m fetch_pc [4] $end
$var wire 1 n fetch_pc [3] $end
$var wire 1 o fetch_pc [2] $end
$var wire 1 p fetch_pc [1] $end
$var wire 1 q fetch_pc [0] $end
$var wire 1 r jump $end
$var wire 1 s jump_wait $end
$var wire 1 t jump_accept $end
$var wire 1 u busy $end
$var wire 1 v rready $end
$var wire 1 w fetch_instr_pc [64] $end
$var wire 1 x fetch_instr_pc [63] $end
$var wire 1 y fetch_instr_pc [62] $end
$var wire 1 z fetch_instr_pc [61] $end
$var wire 1 { fetch_instr_pc [60] $end
$var wire 1 | fetch_instr_pc [59] $end
$var wire 1 } fetch_instr_pc [58] $end
$var wire 1 ~ fetch_instr_pc [57] $end
$var wire 1 !! fetch_instr_pc [56] $end
$var wire 1 "! fetch_instr_pc [55] $end
$var wire 1 #! fetch_instr_pc [54] $end
$var wire 1 $! fetch_instr_pc [53] $end
$var wire 1 %! fetch_instr_pc [52] $end
$var wire 1 &! fetch_instr_pc [51] $end
$var wire 1 '! fetch_instr_pc [50] $end
$var wire 1 (! fetch_instr_pc [49] $end
$var wire 1 )! fetch_instr_pc [48] $end
$var wire 1 *! fetch_instr_pc [47] $end
$var wire 1 +! fetch_instr_pc [46] $end
$var wire 1 ,! fetch_instr_pc [45] $end
$var wire 1 -! fetch_instr_pc [44] $end
$var wire 1 .! fetch_instr_pc [43] $end
$var wire 1 /! fetch_instr_pc [42] $end
$var wire 1 0! fetch_instr_pc [41] $end
$var wire 1 1! fetch_instr_pc [40] $end
$var wire 1 2! fetch_instr_pc [39] $end
$var wire 1 3! fetch_instr_pc [38] $end
$var wire 1 4! fetch_instr_pc [37] $end
$var wire 1 5! fetch_instr_pc [36] $end
$var wire 1 6! fetch_instr_pc [35] $end
$var wire 1 7! fetch_instr_pc [34] $end
$var wire 1 8! fetch_instr_pc [33] $end
$var wire 1 9! fetch_instr_pc [32] $end
$var wire 1 :! fetch_instr_pc [31] $end
$var wire 1 ;! fetch_instr_pc [30] $end
$var wire 1 <! fetch_instr_pc [29] $end
$var wire 1 =! fetch_instr_pc [28] $end
$var wire 1 >! fetch_instr_pc [27] $end
$var wire 1 ?! fetch_instr_pc [26] $end
$var wire 1 @! fetch_instr_pc [25] $end
$var wire 1 A! fetch_instr_pc [24] $end
$var wire 1 B! fetch_instr_pc [23] $end
$var wire 1 C! fetch_instr_pc [22] $end
$var wire 1 D! fetch_instr_pc [21] $end
$var wire 1 E! fetch_instr_pc [20] $end
$var wire 1 F! fetch_instr_pc [19] $end
$var wire 1 G! fetch_instr_pc [18] $end
$var wire 1 H! fetch_instr_pc [17] $end
$var wire 1 I! fetch_instr_pc [16] $end
$var wire 1 J! fetch_instr_pc [15] $end
$var wire 1 K! fetch_instr_pc [14] $end
$var wire 1 L! fetch_instr_pc [13] $end
$var wire 1 M! fetch_instr_pc [12] $end
$var wire 1 N! fetch_instr_pc [11] $end
$var wire 1 O! fetch_instr_pc [10] $end
$var wire 1 P! fetch_instr_pc [9] $end
$var wire 1 Q! fetch_instr_pc [8] $end
$var wire 1 R! fetch_instr_pc [7] $end
$var wire 1 S! fetch_instr_pc [6] $end
$var wire 1 T! fetch_instr_pc [5] $end
$var wire 1 U! fetch_instr_pc [4] $end
$var wire 1 V! fetch_instr_pc [3] $end
$var wire 1 W! fetch_instr_pc [2] $end
$var wire 1 X! fetch_instr_pc [1] $end
$var wire 1 Y! fetch_instr_pc [0] $end
$var wire 1 Z! buf_full $end
$var wire 1 [! buf_empty $end
$var wire 1 \! buf_counter [4] $end
$var wire 1 ]! buf_counter [3] $end
$var wire 1 ^! buf_counter [2] $end
$var wire 1 _! buf_counter [1] $end
$var wire 1 `! buf_counter [0] $end
$var wire 1 a! rst_fifo $end
$var wire 1 b! write $end
$var wire 1 c! read $end
$var wire 1 d! data_in [64] $end
$var wire 1 e! data_in [63] $end
$var wire 1 f! data_in [62] $end
$var wire 1 g! data_in [61] $end
$var wire 1 h! data_in [60] $end
$var wire 1 i! data_in [59] $end
$var wire 1 j! data_in [58] $end
$var wire 1 k! data_in [57] $end
$var wire 1 l! data_in [56] $end
$var wire 1 m! data_in [55] $end
$var wire 1 n! data_in [54] $end
$var wire 1 o! data_in [53] $end
$var wire 1 p! data_in [52] $end
$var wire 1 q! data_in [51] $end
$var wire 1 r! data_in [50] $end
$var wire 1 s! data_in [49] $end
$var wire 1 t! data_in [48] $end
$var wire 1 u! data_in [47] $end
$var wire 1 v! data_in [46] $end
$var wire 1 w! data_in [45] $end
$var wire 1 x! data_in [44] $end
$var wire 1 y! data_in [43] $end
$var wire 1 z! data_in [42] $end
$var wire 1 {! data_in [41] $end
$var wire 1 |! data_in [40] $end
$var wire 1 }! data_in [39] $end
$var wire 1 ~! data_in [38] $end
$var wire 1 !" data_in [37] $end
$var wire 1 "" data_in [36] $end
$var wire 1 #" data_in [35] $end
$var wire 1 $" data_in [34] $end
$var wire 1 %" data_in [33] $end
$var wire 1 &" data_in [32] $end
$var wire 1 '" data_in [31] $end
$var wire 1 (" data_in [30] $end
$var wire 1 )" data_in [29] $end
$var wire 1 *" data_in [28] $end
$var wire 1 +" data_in [27] $end
$var wire 1 ," data_in [26] $end
$var wire 1 -" data_in [25] $end
$var wire 1 ." data_in [24] $end
$var wire 1 /" data_in [23] $end
$var wire 1 0" data_in [22] $end
$var wire 1 1" data_in [21] $end
$var wire 1 2" data_in [20] $end
$var wire 1 3" data_in [19] $end
$var wire 1 4" data_in [18] $end
$var wire 1 5" data_in [17] $end
$var wire 1 6" data_in [16] $end
$var wire 1 7" data_in [15] $end
$var wire 1 8" data_in [14] $end
$var wire 1 9" data_in [13] $end
$var wire 1 :" data_in [12] $end
$var wire 1 ;" data_in [11] $end
$var wire 1 <" data_in [10] $end
$var wire 1 =" data_in [9] $end
$var wire 1 >" data_in [8] $end
$var wire 1 ?" data_in [7] $end
$var wire 1 @" data_in [6] $end
$var wire 1 A" data_in [5] $end
$var wire 1 B" data_in [4] $end
$var wire 1 C" data_in [3] $end
$var wire 1 D" data_in [2] $end
$var wire 1 E" data_in [1] $end
$var wire 1 F" data_in [0] $end

$scope module Buffer $end
$var wire 1 . clk $end
$var wire 1 a! rst_n $end
$var wire 1 d! data_in [64] $end
$var wire 1 e! data_in [63] $end
$var wire 1 f! data_in [62] $end
$var wire 1 g! data_in [61] $end
$var wire 1 h! data_in [60] $end
$var wire 1 i! data_in [59] $end
$var wire 1 j! data_in [58] $end
$var wire 1 k! data_in [57] $end
$var wire 1 l! data_in [56] $end
$var wire 1 m! data_in [55] $end
$var wire 1 n! data_in [54] $end
$var wire 1 o! data_in [53] $end
$var wire 1 p! data_in [52] $end
$var wire 1 q! data_in [51] $end
$var wire 1 r! data_in [50] $end
$var wire 1 s! data_in [49] $end
$var wire 1 t! data_in [48] $end
$var wire 1 u! data_in [47] $end
$var wire 1 v! data_in [46] $end
$var wire 1 w! data_in [45] $end
$var wire 1 x! data_in [44] $end
$var wire 1 y! data_in [43] $end
$var wire 1 z! data_in [42] $end
$var wire 1 {! data_in [41] $end
$var wire 1 |! data_in [40] $end
$var wire 1 }! data_in [39] $end
$var wire 1 ~! data_in [38] $end
$var wire 1 !" data_in [37] $end
$var wire 1 "" data_in [36] $end
$var wire 1 #" data_in [35] $end
$var wire 1 $" data_in [34] $end
$var wire 1 %" data_in [33] $end
$var wire 1 &" data_in [32] $end
$var wire 1 '" data_in [31] $end
$var wire 1 (" data_in [30] $end
$var wire 1 )" data_in [29] $end
$var wire 1 *" data_in [28] $end
$var wire 1 +" data_in [27] $end
$var wire 1 ," data_in [26] $end
$var wire 1 -" data_in [25] $end
$var wire 1 ." data_in [24] $end
$var wire 1 /" data_in [23] $end
$var wire 1 0" data_in [22] $end
$var wire 1 1" data_in [21] $end
$var wire 1 2" data_in [20] $end
$var wire 1 3" data_in [19] $end
$var wire 1 4" data_in [18] $end
$var wire 1 5" data_in [17] $end
$var wire 1 6" data_in [16] $end
$var wire 1 7" data_in [15] $end
$var wire 1 8" data_in [14] $end
$var wire 1 9" data_in [13] $end
$var wire 1 :" data_in [12] $end
$var wire 1 ;" data_in [11] $end
$var wire 1 <" data_in [10] $end
$var wire 1 =" data_in [9] $end
$var wire 1 >" data_in [8] $end
$var wire 1 ?" data_in [7] $end
$var wire 1 @" data_in [6] $end
$var wire 1 A" data_in [5] $end
$var wire 1 B" data_in [4] $end
$var wire 1 C" data_in [3] $end
$var wire 1 D" data_in [2] $end
$var wire 1 E" data_in [1] $end
$var wire 1 F" data_in [0] $end
$var wire 1 b! write $end
$var wire 1 c! read $end
$var reg 65 G" data_out [64:0] $end
$var reg 1 H" buf_empty $end
$var reg 1 I" buf_full $end
$var reg 5 J" counter [4:0] $end
$var reg 5 K" read_pointer [4:0] $end
$var reg 5 L" write_pointer [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1!
0"
x#
x$
bx %
bx &
x'
x(
x)
x*
1+
b1001100000000000000000000000000000000 ,
0-
b1001100000000000000000000000000000000 G"
1H"
0I"
b0 J"
b0 K"
b0 L"
1[!
0`!
0_!
0^!
0]!
0\!
0a!
1b!
xc!
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
x{!
xz!
xy!
xx!
xw!
xv!
xu!
xt!
xs!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
xj!
xi!
xh!
xg!
xf!
xe!
xd!
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
0/
1.
1v
0Y!
0X!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0I!
0H!
0G!
0F!
0E!
0D!
0C!
0B!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
19!
18!
07!
06!
15!
04!
03!
02!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0Z!
$end
#10000
0!
0.
#20000
1!
1.
#30000
0!
0.
#40000
1!
1.
#50000
0!
0.
#60000
1"
1#
b1010000010110111 %
b0 &
0'
0(
0)
0*
1!
1/
10
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
1Q
1P
1O
0N
1M
1L
0K
1J
0I
0H
0G
0F
0E
1D
0C
1B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
0r
0s
0t
0u
1c!
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
1&"
1%"
1$"
0#"
1""
1!"
0~!
1}!
0|!
0{!
0z!
0y!
0x!
1w!
0v!
1u!
0t!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0j!
0i!
0h!
0g!
0f!
0e!
1d!
1.
1a!
b10000000000000000101000001011011100000000000000000000000000000000 G"
17!
14!
12!
1,!
1*!
1w
b10000000000000000101000001011011100000000000000000000000000000000 ,
#70000
0!
0.
#80000
b10000000000000011101111 %
b100 &
1!
1o
1N
0M
1K
0D
0B
1;
1D"
1#"
0""
1~!
0w!
0u!
1n!
1.
b10000000001000000000000001110111100000000000000000000000000000100 G"
1W!
16!
05!
13!
0,!
0*!
1#!
b10000000001000000000000001110111100000000000000000000000000000100 ,
#90000
0!
0.
#100000
0#
b1010000100110111 %
b1000 &
1!
00
0o
1n
0N
1M
0K
0J
1I
1D
1B
0;
0D"
1C"
0#"
1""
0~!
0}!
1|!
1w!
1u!
0n!
0d!
1.
b101000010011011100000000000000000000000000001000 G"
0W!
1V!
06!
15!
03!
02!
11!
1,!
1*!
0#!
0w
b101000010011011100000000000000000000000000001000 ,
#110000
0!
0.
#120000
1!
1.
#130000
0!
0.
#140000
1!
1.
#150000
0!
0.
#160000
1!
1.
#170000
0!
0.
#180000
1!
1.
#190000
0!
0.
#200000
1!
1.
#210000
0!
0.
#220000
1!
1.
#230000
0!
0.
#240000
1!
1.
#250000
0!
0.
#260000
1!
1.
#270000
0!
0.
#280000
1!
1.
#290000
0!
0.
#300000
1!
1.
#310000
0!
0.
#320000
1!
1.
#330000
0!
0.
#340000
1!
1.
#350000
0!
0.
#360000
1!
1.
#370000
0!
0.
#380000
1!
1.
#390000
0!
0.
#400000
1!
1.
#410000
0!
0.
#420000
1!
1.
#430000
0!
0.
#440000
1!
1.
#450000
0!
0.
#460000
1!
1.
#470000
0!
0.
#480000
1!
1.
#490000
0!
0.
#500000
1!
1.
#510000
0!
0.
#520000
1!
1.
#530000
0!
0.
#540000
1!
1.
#550000
0!
0.
#560000
1!
1.
#570000
0!
0.
#580000
1!
1.
#590000
0!
0.
#600000
1!
1.
#610000
0!
0.
#620000
1!
1.
#630000
0!
0.
#640000
1!
1.
#650000
0!
0.
#660000
1!
1.
#670000
0!
0.
#680000
1!
1.
#690000
0!
0.
#700000
1!
1.
#710000
0!
0.
#720000
1!
1.
#730000
0!
0.
#740000
1!
1.
#750000
0!
0.
#760000
1!
1.
#770000
0!
0.
#780000
1!
1.
#790000
0!
0.
#800000
1!
1.
#810000
0!
0.
#820000
1!
1.
#830000
0!
0.
#840000
1!
1.
#850000
0!
0.
#860000
1!
1.
#870000
0!
0.
#880000
1!
1.
#890000
0!
0.
#900000
1!
1.
#910000
0!
0.
#920000
1!
1.
#930000
0!
0.
#940000
1!
1.
#950000
0!
0.
#960000
1!
1.
#970000
0!
0.
#980000
1!
1.
#990000
0!
0.
#1000000
1!
1.
#1010000
0!
0.
#1020000
1!
1.
#1030000
0!
0.
#1040000
1!
1.
#1050000
0!
0.
#1060000
1!
1.
#1070000
0!
0.
#1080000
1!
1.
#1090000
0!
0.
