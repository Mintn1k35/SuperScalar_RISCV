$date
	Thu Dec 28 14:45:08 2023
$end
$version
	Questa Intel Starter FPGA Edition Version 2021.2
$end
$timescale
	1ps
$end

$scope module tb_Fifo $end
$var reg 1 ! clk $end
$var reg 1 " rst_n $end
$var reg 64 # data_in [63:0] $end
$var reg 1 $ write $end
$var reg 1 % read $end
$var reg 32 & data_out [31:0] $end
$var reg 1 ' buf_empty $end
$var reg 1 ( buf_full $end

$scope module Fifo_instance $end
$var wire 1 ) clk $end
$var wire 1 * rst_n $end
$var wire 1 + data_in [63] $end
$var wire 1 , data_in [62] $end
$var wire 1 - data_in [61] $end
$var wire 1 . data_in [60] $end
$var wire 1 / data_in [59] $end
$var wire 1 0 data_in [58] $end
$var wire 1 1 data_in [57] $end
$var wire 1 2 data_in [56] $end
$var wire 1 3 data_in [55] $end
$var wire 1 4 data_in [54] $end
$var wire 1 5 data_in [53] $end
$var wire 1 6 data_in [52] $end
$var wire 1 7 data_in [51] $end
$var wire 1 8 data_in [50] $end
$var wire 1 9 data_in [49] $end
$var wire 1 : data_in [48] $end
$var wire 1 ; data_in [47] $end
$var wire 1 < data_in [46] $end
$var wire 1 = data_in [45] $end
$var wire 1 > data_in [44] $end
$var wire 1 ? data_in [43] $end
$var wire 1 @ data_in [42] $end
$var wire 1 A data_in [41] $end
$var wire 1 B data_in [40] $end
$var wire 1 C data_in [39] $end
$var wire 1 D data_in [38] $end
$var wire 1 E data_in [37] $end
$var wire 1 F data_in [36] $end
$var wire 1 G data_in [35] $end
$var wire 1 H data_in [34] $end
$var wire 1 I data_in [33] $end
$var wire 1 J data_in [32] $end
$var wire 1 K data_in [31] $end
$var wire 1 L data_in [30] $end
$var wire 1 M data_in [29] $end
$var wire 1 N data_in [28] $end
$var wire 1 O data_in [27] $end
$var wire 1 P data_in [26] $end
$var wire 1 Q data_in [25] $end
$var wire 1 R data_in [24] $end
$var wire 1 S data_in [23] $end
$var wire 1 T data_in [22] $end
$var wire 1 U data_in [21] $end
$var wire 1 V data_in [20] $end
$var wire 1 W data_in [19] $end
$var wire 1 X data_in [18] $end
$var wire 1 Y data_in [17] $end
$var wire 1 Z data_in [16] $end
$var wire 1 [ data_in [15] $end
$var wire 1 \ data_in [14] $end
$var wire 1 ] data_in [13] $end
$var wire 1 ^ data_in [12] $end
$var wire 1 _ data_in [11] $end
$var wire 1 ` data_in [10] $end
$var wire 1 a data_in [9] $end
$var wire 1 b data_in [8] $end
$var wire 1 c data_in [7] $end
$var wire 1 d data_in [6] $end
$var wire 1 e data_in [5] $end
$var wire 1 f data_in [4] $end
$var wire 1 g data_in [3] $end
$var wire 1 h data_in [2] $end
$var wire 1 i data_in [1] $end
$var wire 1 j data_in [0] $end
$var wire 1 k write $end
$var wire 1 l read $end
$var reg 32 m data_out [31:0] $end
$var reg 1 n buf_empty $end
$var reg 1 o buf_full $end
$var reg 5 p counter [4:0] $end
$var reg 5 q read_pointer [4:0] $end
$var reg 5 r write_pointer [4:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
bx #
x$
x%
b10011 &
1'
0(
b10011 m
1n
0o
b0 p
b0 q
b0 r
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
0*
0)
$end
#10000
1!
1)
#20000
0!
0)
#30000
1!
1)
#40000
0!
0)
#50000
1!
1)
#60000
1"
b100000000000000000000000000000010 #
1$
1%
0!
0j
1i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
1J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
1k
1l
1*
0)
#70000
1!
1)
b10 p
b10 r
0n
0'
#80000
0!
0)
#90000
1!
1)
b10 m
b100 r
b1 q
b10 &
#100000
0!
0)
#110000
1!
1)
b110 r
b10 q
b1 m
b1 &
#120000
0!
0)
#130000
1!
1)
b10 m
b1000 r
b11 q
b10 &
#140000
0!
0)
#150000
1!
1)
b1010 r
b100 q
b1 m
b1 &
#160000
0!
0)
#170000
1!
1)
b10 m
b1100 r
b101 q
b10 &
#180000
0!
0)
#190000
1!
1)
b1110 r
b110 q
b1 m
b1 &
#200000
0!
0)
#210000
1!
1)
b10 m
b10000 r
b111 q
b10 &
#220000
0!
0)
#230000
1!
1)
b10010 r
b1000 q
b1 m
b1 &
#240000
0!
0)
#250000
1!
1)
b10 m
b10100 r
b1001 q
b10 &
#260000
0!
0)
#270000
1!
1)
b10110 r
b1010 q
b1 m
b1 &
#280000
0!
0)
#290000
1!
1)
b10 m
b11000 r
b1011 q
b10 &
#300000
0!
0)
#310000
1!
1)
b11010 r
b1100 q
b1 m
b1 &
#320000
0!
0)
#330000
1!
1)
b10 m
b11100 r
b1101 q
b10 &
#340000
0!
0)
#350000
1!
1)
b11110 r
b1110 q
b1 m
b1 &
#360000
0!
0)
#370000
1!
1)
b10 m
b0 r
b1111 q
b10 &
#380000
0!
0)
#390000
1!
1)
b10 r
b10000 q
b1 m
b1 &
#400000
0!
0)
#410000
1!
1)
b10 m
b100 r
b10001 q
b10 &
#420000
0!
0)
#430000
1!
1)
b110 r
b10010 q
b1 m
b1 &
#440000
0!
0)
#450000
1!
1)
b10 m
b1000 r
b10011 q
b10 &
#460000
0!
0)
#470000
1!
1)
b1010 r
b10100 q
b1 m
b1 &
#480000
0!
0)
#490000
1!
1)
b10 m
b1100 r
b10101 q
b10 &
#500000
0!
0)
#510000
1!
1)
b1110 r
b10110 q
b1 m
b1 &
#520000
0!
0)
#530000
1!
1)
b10 m
b10000 r
b10111 q
b10 &
#540000
0!
0)
#550000
1!
1)
b10010 r
b11000 q
b1 m
b1 &
#560000
0!
0)
#570000
1!
1)
b10 m
b10100 r
b11001 q
b10 &
#580000
0!
0)
#590000
1!
1)
b10110 r
b11010 q
b1 m
b1 &
#600000
0!
0)
#610000
1!
1)
b10 m
b11000 r
b11011 q
b10 &
#620000
0!
0)
#630000
1!
1)
b11010 r
b11100 q
b1 m
b1 &
#640000
0!
0)
#650000
1!
1)
b10 m
b11100 r
b11101 q
b10 &
#660000
0!
0)
#670000
1!
1)
b11110 r
b11110 q
b1 m
b1 &
#680000
0!
0)
#690000
1!
1)
b10 m
b0 r
b11111 q
b10 &
#700000
0!
0)
#710000
1!
1)
b10 r
b0 q
b1 m
b1 &
#720000
0!
0)
#730000
1!
1)
b10 m
b100 r
b1 q
b10 &
#740000
0!
0)
#750000
1!
1)
b110 r
b10 q
b1 m
b1 &
#760000
0!
0)
#770000
1!
1)
b10 m
b1000 r
b11 q
b10 &
#780000
0!
0)
#790000
1!
1)
b1010 r
b100 q
b1 m
b1 &
#800000
0!
0)
#810000
1!
1)
b10 m
b1100 r
b101 q
b10 &
#820000
0!
0)
#830000
1!
1)
b1110 r
b110 q
b1 m
b1 &
#840000
0!
0)
#850000
1!
1)
b10 m
b10000 r
b111 q
b10 &
#860000
0!
0)
#870000
1!
1)
b10010 r
b1000 q
b1 m
b1 &
#880000
0!
0)
#890000
1!
1)
b10 m
b10100 r
b1001 q
b10 &
#900000
0!
0)
#910000
1!
1)
b10110 r
b1010 q
b1 m
b1 &
#920000
0!
0)
#930000
1!
1)
b10 m
b11000 r
b1011 q
b10 &
#940000
0!
0)
#950000
1!
1)
b11010 r
b1100 q
b1 m
b1 &
#960000
0!
0)
#970000
1!
1)
b10 m
b11100 r
b1101 q
b10 &
#980000
0!
0)
#990000
1!
1)
b11110 r
b1110 q
b1 m
b1 &
#1000000
0!
0)
#1010000
1!
1)
b10 m
b0 r
b1111 q
b10 &
#1020000
0!
0)
#1030000
1!
1)
b10 r
b10000 q
b1 m
b1 &
#1040000
0!
0)
#1050000
1!
1)
b10 m
b100 r
b10001 q
b10 &
