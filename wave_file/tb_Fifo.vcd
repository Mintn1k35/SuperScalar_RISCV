$date
	Fri Jan  5 14:07:18 2024
$end
$version
	Questa Intel Starter FPGA Edition Version 2021.2
$end
$timescale
	1ps
$end

$scope module tb_Fifo $end
$var reg 1 ! clk $end
$var reg 1 " rst_n $end
$var reg 64 # data_in [63:0] $end
$var reg 1 $ write $end
$var reg 1 % read $end
$var reg 1 & stall $end
$var reg 64 ' data_out [63:0] $end
$var reg 1 ( buf_full $end

$scope module Fifo_instance $end
$var wire 1 ) clk $end
$var wire 1 * rst_n $end
$var wire 1 + data_in [63] $end
$var wire 1 , data_in [62] $end
$var wire 1 - data_in [61] $end
$var wire 1 . data_in [60] $end
$var wire 1 / data_in [59] $end
$var wire 1 0 data_in [58] $end
$var wire 1 1 data_in [57] $end
$var wire 1 2 data_in [56] $end
$var wire 1 3 data_in [55] $end
$var wire 1 4 data_in [54] $end
$var wire 1 5 data_in [53] $end
$var wire 1 6 data_in [52] $end
$var wire 1 7 data_in [51] $end
$var wire 1 8 data_in [50] $end
$var wire 1 9 data_in [49] $end
$var wire 1 : data_in [48] $end
$var wire 1 ; data_in [47] $end
$var wire 1 < data_in [46] $end
$var wire 1 = data_in [45] $end
$var wire 1 > data_in [44] $end
$var wire 1 ? data_in [43] $end
$var wire 1 @ data_in [42] $end
$var wire 1 A data_in [41] $end
$var wire 1 B data_in [40] $end
$var wire 1 C data_in [39] $end
$var wire 1 D data_in [38] $end
$var wire 1 E data_in [37] $end
$var wire 1 F data_in [36] $end
$var wire 1 G data_in [35] $end
$var wire 1 H data_in [34] $end
$var wire 1 I data_in [33] $end
$var wire 1 J data_in [32] $end
$var wire 1 K data_in [31] $end
$var wire 1 L data_in [30] $end
$var wire 1 M data_in [29] $end
$var wire 1 N data_in [28] $end
$var wire 1 O data_in [27] $end
$var wire 1 P data_in [26] $end
$var wire 1 Q data_in [25] $end
$var wire 1 R data_in [24] $end
$var wire 1 S data_in [23] $end
$var wire 1 T data_in [22] $end
$var wire 1 U data_in [21] $end
$var wire 1 V data_in [20] $end
$var wire 1 W data_in [19] $end
$var wire 1 X data_in [18] $end
$var wire 1 Y data_in [17] $end
$var wire 1 Z data_in [16] $end
$var wire 1 [ data_in [15] $end
$var wire 1 \ data_in [14] $end
$var wire 1 ] data_in [13] $end
$var wire 1 ^ data_in [12] $end
$var wire 1 _ data_in [11] $end
$var wire 1 ` data_in [10] $end
$var wire 1 a data_in [9] $end
$var wire 1 b data_in [8] $end
$var wire 1 c data_in [7] $end
$var wire 1 d data_in [6] $end
$var wire 1 e data_in [5] $end
$var wire 1 f data_in [4] $end
$var wire 1 g data_in [3] $end
$var wire 1 h data_in [2] $end
$var wire 1 i data_in [1] $end
$var wire 1 j data_in [0] $end
$var wire 1 k write $end
$var wire 1 l read $end
$var wire 1 m stall $end
$var reg 64 n data_out [63:0] $end
$var reg 1 o buf_full $end
$var wire 1 p clk_n $end
$var reg 1 q buf_empty $end
$var reg 5 r counter [4:0] $end
$var reg 5 s read_pointer [4:0] $end
$var reg 5 t write_pointer [4:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
bx #
x$
x%
x&
b0 '
0(
b0 n
0o
1q
b0 r
b0 s
b0 t
1p
xm
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
0*
0)
$end
#10000
1!
1)
0p
#20000
1"
0&
b1010 #
1$
1%
0!
0m
0j
1i
0h
1g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
1k
1l
1*
0)
1p
b1 t
#30000
1!
1)
0p
b1 r
0q
#40000
b10100 #
0!
0i
1h
0g
1f
0)
1p
b10 t
b1 s
#50000
1!
1)
0p
b1010 n
b1010 '
#60000
1&
b11110 #
0!
1m
1i
1g
0)
1p
b11 t
#70000
1!
1)
0p
#80000
0!
0)
1p
b100 t
#90000
1!
1)
0p
#100000
0!
0)
1p
b101 t
#110000
1!
1)
0p
#120000
0!
0)
1p
b110 t
#130000
1!
1)
0p
#140000
0!
0)
1p
b111 t
#150000
1!
1)
0p
#160000
0!
0)
1p
b1000 t
#170000
1!
1)
0p
